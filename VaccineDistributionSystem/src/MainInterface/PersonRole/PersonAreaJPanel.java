/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainInterface.PersonRole;

import Model.DB4OUtil.DB4OUtil;
import Model.EcoSys;
import Model.Enterprise.Enterprise;
import Model.Organization.PersonOrg;
import Model.UserAccount.UserAccount;
import Model.WorkQueue.WorkReq;
import Model.WorkQueue.appointment;
import Model.WorkQueue.prescribeMeds;
import Model.WorkQueue.vaccinate;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anushkadarade
 */
public class PersonAreaJPanel extends javax.swing.JPanel {

     private JPanel userProcessContainer;
     private UserAccount account;
     private PersonOrg organization;
     private Enterprise enterprise;
     private EcoSys business;
     private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
     private Date v1date;
    
    public PersonAreaJPanel(JPanel userProcessContainer, UserAccount account, PersonOrg organization, Enterprise enterprise, EcoSys business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
        populateVaccineTable();
        populateAppointmentTable();
        populateMedTable();
        Date td = new Date();
        lblValue.setText(account.getEmployee().getName());
//        System.out.println(((td.getTime()-v1date.getTime())/(1000*60*60*24))%365);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        btnVaccine = new javax.swing.JButton();
        btnAppointment = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVaccineRequest = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAppoinment = new javax.swing.JTable();
        lblTitle = new javax.swing.JLabel();
        lblValue = new javax.swing.JLabel();
        lblText = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        PharmajTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField2");

        setBackground(new java.awt.Color(11, 49, 48));
        setMinimumSize(new java.awt.Dimension(1440, 848));
        setPreferredSize(new java.awt.Dimension(1440, 848));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVaccine.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        btnVaccine.setText("Schedule Vaccination");
        btnVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaccineActionPerformed(evt);
            }
        });
        add(btnVaccine, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 230, -1, -1));

        btnAppointment.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        btnAppointment.setText("Schedule Appointment");
        btnAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAppointmentActionPerformed(evt);
            }
        });
        add(btnAppointment, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 420, -1, -1));

        tblVaccineRequest.setBackground(new java.awt.Color(124, 169, 130));
        tblVaccineRequest.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tblVaccineRequest.setForeground(new java.awt.Color(36, 47, 65));
        tblVaccineRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Sender", "Vaccination Date", "Status", "Distribution Center", "Vaccine Name"
            }
        ));
        tblVaccineRequest.setGridColor(new java.awt.Color(4, 182, 145));
        jScrollPane2.setViewportView(tblVaccineRequest);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 610, 140));

        tblAppoinment.setBackground(new java.awt.Color(124, 169, 130));
        tblAppoinment.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tblAppoinment.setForeground(new java.awt.Color(36, 47, 65));
        tblAppoinment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Sender", "Receiver", "Status", "Date"
            }
        ));
        tblAppoinment.setGridColor(new java.awt.Color(4, 182, 145));
        jScrollPane1.setViewportView(tblAppoinment);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 370, 420, 140));
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 0, 100, 850));

        lblValue.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        lblValue.setForeground(new java.awt.Color(124, 169, 130));
        lblValue.setText("<value>");
        add(lblValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 230, 30));

        lblText.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblText.setForeground(new java.awt.Color(255, 255, 255));
        lblText.setText("Currently Logged in as:");
        add(lblText, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, -1, 30));

        PharmajTable.setBackground(new java.awt.Color(124, 169, 130));
        PharmajTable.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        PharmajTable.setForeground(new java.awt.Color(36, 47, 65));
        PharmajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Person", "Doctor", "Pharmacy", "Medicine List", "Availability"
            }
        ));
        PharmajTable.setGridColor(new java.awt.Color(4, 182, 145));
        jScrollPane3.setViewportView(PharmajTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 530, 500, 140));

        jLabel1.setFont(new java.awt.Font("Malgun Gothic", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PERSON AREA");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaccineActionPerformed
        // TODO add your handling code here:
        int count = tblVaccineRequest.getModel().getRowCount();
        if(count==0){
        populateVaccineTable();
        userProcessContainer.removeAll();
        ScheduleVaccineJPanel scheduleVaccineJPanel = new ScheduleVaccineJPanel(userProcessContainer, organization, enterprise, business, account);
        userProcessContainer.add("scheduleVaccineJPanel", scheduleVaccineJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        dB4OUtil.storeSystem(business);
        }
        else{
            JOptionPane.showMessageDialog(this, "You already have a vaccination request submitted");
            return;
        }
    }//GEN-LAST:event_btnVaccineActionPerformed

    private void btnAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAppointmentActionPerformed
        // TODO add your handling code here:
        int count = tblVaccineRequest.getModel().getRowCount();
        if(count!=0){
        populateAppointmentTable();
        userProcessContainer.removeAll();
        ScheduleAppointmentJPanel scheduleAppointmentJPanel = new ScheduleAppointmentJPanel(userProcessContainer, organization, enterprise, business, account);
        userProcessContainer.add("scheduleAppointmentJPanel", scheduleAppointmentJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
        else{
            JOptionPane.showMessageDialog(this, "You can only book an appointment if you have received or a vaccination scheduled!!");
            return;
        }
    }//GEN-LAST:event_btnAppointmentActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PharmajTable;
    private javax.swing.JButton btnAppointment;
    private javax.swing.JButton btnVaccine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblText;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblValue;
    private javax.swing.JTable tblAppoinment;
    private javax.swing.JTable tblVaccineRequest;
    // End of variables declaration//GEN-END:variables

    private void populateVaccineTable() {
        DefaultTableModel model = (DefaultTableModel) tblVaccineRequest.getModel();
        model.setRowCount(0);
        System.out.println("out for");
        for(WorkReq wr : account.getWorkQueue().getWorkRequestList()){
           Object[] row = new Object[5];
           
        System.out.println("in for");
           if(wr instanceof vaccinate){
               
        System.out.println("wr found");
           String Date = ((vaccinate) wr).getDate();
           
               
        System.out.println("in try");
               
        System.out.println("in if");
           row[0] = wr;
           
           row[1] = Date;
           
//           row[1] = null;
           row[2] = wr.getStatus();
           v1date = ((vaccinate) wr).getDt();
           System.out.println(v1date);
           Date td = new Date();
//           System.out.println(((td.getTime()-v1date.getTime())/(1000*60*60*24))%365);
           String dc = ((vaccinate) wr).getDistributionCenter();
           row[3] = dc;
           row[4] = null;
           model.addRow(row);
        
       
    }
        }
    }

    private void populateAppointmentTable() {
        DefaultTableModel model = (DefaultTableModel) tblAppoinment.getModel();
        model.setRowCount(0);
        
        for(WorkReq wr : account.getWorkQueue().getWorkRequestList()){
           Object[] row = new Object[4];
           if(wr instanceof appointment){
           String hospitalName = ((appointment) wr).getHospitalName();
           if(hospitalName.length()!=0){
           row[0] = wr;
           String Date = ((appointment) wr).getDate();
           row[1] = hospitalName;
           row[2] = wr.getStatus();
           row[3] = Date;
           
           model.addRow(row);
           }
        }
        }
    }
    private void populateMedTable() {
        DefaultTableModel model = (DefaultTableModel)PharmajTable.getModel();
        model.setRowCount(0);
        
        for(WorkReq wr : account.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            if(wr instanceof prescribeMeds){
                row[0] = wr;
                row[1] = wr.getSender();
                row[2] = wr.getReceiver();
                row[3] = ((prescribeMeds) wr).getMedList();
                row[4] = wr.getStatus();
                model.addRow(row);
                
            }
        }
    }
}
